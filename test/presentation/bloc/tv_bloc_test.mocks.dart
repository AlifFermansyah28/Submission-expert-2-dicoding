// Mocks generated by Mockito 5.3.0 from annotations
// in ditonton/test/presentation/bloc/tv_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:dartz/dartz.dart' as _i3;
import 'package:ditonton/common/failure.dart' as _i6;
import 'package:ditonton/domain/entities/tv.dart' as _i9;
import 'package:ditonton/domain/entities/tv_detail.dart' as _i7;
import 'package:ditonton/domain/repositories/tv_repo.dart' as _i2;
import 'package:ditonton/domain/usecases/get_popular_tv.dart' as _i12;
import 'package:ditonton/domain/usecases/get_top_rated_tv.dart' as _i11;
import 'package:ditonton/domain/usecases/get_tv_detail.dart' as _i4;
import 'package:ditonton/domain/usecases/get_tv_on_airing.dart' as _i10;
import 'package:ditonton/domain/usecases/get_tv_recomendations.dart' as _i8;
import 'package:ditonton/domain/usecases/get_tv_watchlist.dart' as _i13;
import 'package:ditonton/domain/usecases/get_tv_watchlist_status.dart' as _i14;
import 'package:ditonton/domain/usecases/remove_tv_watchlist.dart' as _i15;
import 'package:ditonton/domain/usecases/save_tv_watchlist.dart' as _i16;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeTvRepo_0 extends _i1.SmartFake implements _i2.TvRepo {
  _FakeTvRepo_0(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

class _FakeEither_1<L, R> extends _i1.SmartFake implements _i3.Either<L, R> {
  _FakeEither_1(Object parent, Invocation parentInvocation)
      : super(parent, parentInvocation);
}

/// A class which mocks [GetTvDetail].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvDetail extends _i1.Mock implements _i4.GetTvDetail {
  MockGetTvDetail() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, _i7.TvDet>> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
              returnValue: _i5.Future<_i3.Either<_i6.Failure, _i7.TvDet>>.value(
                  _FakeEither_1<_i6.Failure, _i7.TvDet>(
                      this, Invocation.method(#execute, [id]))))
          as _i5.Future<_i3.Either<_i6.Failure, _i7.TvDet>>);
}

/// A class which mocks [GetTvRecommendations].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvRecommendations extends _i1.Mock
    implements _i8.GetTvRecommendations {
  MockGetTvRecommendations() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>> execute(dynamic id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tv>>(
                  this, Invocation.method(#execute, [id])))) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>);
}

/// A class which mocks [GetOnAiringTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetOnAiringTv extends _i1.Mock implements _i10.GetOnAiringTv {
  MockGetOnAiringTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tv>>(
                  this, Invocation.method(#execute, [])))) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>);
}

/// A class which mocks [GetTopRatedTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTopRatedTv extends _i1.Mock implements _i11.GetTopRatedTv {
  MockGetTopRatedTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tv>>(
                  this, Invocation.method(#execute, [])))) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>);
}

/// A class which mocks [GetPopularTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetPopularTv extends _i1.Mock implements _i12.GetPopularTv {
  MockGetPopularTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tv>>(
                  this, Invocation.method(#execute, [])))) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>);
}

/// A class which mocks [GetWatchlistTv].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetWatchlistTv extends _i1.Mock implements _i13.GetWatchlistTv {
  MockGetWatchlistTv() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>> execute() =>
      (super.noSuchMethod(Invocation.method(#execute, []),
          returnValue: _i5.Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>.value(
              _FakeEither_1<_i6.Failure, List<_i9.Tv>>(
                  this, Invocation.method(#execute, [])))) as _i5
          .Future<_i3.Either<_i6.Failure, List<_i9.Tv>>>);
}

/// A class which mocks [GetTvWatchListStatus].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetTvWatchListStatus extends _i1.Mock
    implements _i14.GetTvWatchListStatus {
  MockGetTvWatchListStatus() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<bool> execute(int? id) =>
      (super.noSuchMethod(Invocation.method(#execute, [id]),
          returnValue: _i5.Future<bool>.value(false)) as _i5.Future<bool>);
}

/// A class which mocks [RemoveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoveTvWatchlist extends _i1.Mock implements _i15.RemoveTvWatchlist {
  MockRemoveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvDet? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>(
                      this, Invocation.method(#execute, [tv]))))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}

/// A class which mocks [SaveTvWatchlist].
///
/// See the documentation for Mockito's code generation for more information.
class MockSaveTvWatchlist extends _i1.Mock implements _i16.SaveTvWatchlist {
  MockSaveTvWatchlist() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.TvRepo get repository =>
      (super.noSuchMethod(Invocation.getter(#repository),
              returnValue: _FakeTvRepo_0(this, Invocation.getter(#repository)))
          as _i2.TvRepo);
  @override
  _i5.Future<_i3.Either<_i6.Failure, String>> execute(_i7.TvDet? tv) =>
      (super.noSuchMethod(Invocation.method(#execute, [tv]),
              returnValue: _i5.Future<_i3.Either<_i6.Failure, String>>.value(
                  _FakeEither_1<_i6.Failure, String>(
                      this, Invocation.method(#execute, [tv]))))
          as _i5.Future<_i3.Either<_i6.Failure, String>>);
}
